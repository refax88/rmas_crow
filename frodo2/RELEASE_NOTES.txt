CHANGES IN VERSION 2.7.1 SINCE VERSION 2.7

Major changes:
	- Now provides a simple GUI, based on Graphviz (request 3055361, contributed by Andreas Schaedeli). 
	- Multiple improvements in message sizes by a more efficient serialization of variable values and utility values. 
	- The DisMDVRP benchmarks are now a full part of FRODO, after the release of the OR-Objects library under the GPL (request 3095995). 
	- Fixed a bug in the JVM not exiting immediately after FRODO times out (bug 3097191 reported by Andreas Schaedeli). 

Minor changes: 
	- Fixed a bug in ADOPT's NCCC count, which was underestimated (bug 3094656). 
	- Fixed a bug in XCSPparser.switchMaxMin() (bug 3096299, reported by Andreas Schaedeli).
	- Various improvements and bugfixes to P2-DPOP (bug 3110182). 
	- SolutionSpaces are now allowed to contain more than 2^32 solutions, up to 2^64. 
	- Code improvements to O-DPOP and ASO-DPOP. 


CHANGES IN VERSION 2.7 SINCE VERSION 2.6.3

Major changes:
	- Support for P2-DPOP (Leaute PASSAT'09), a version of DPOP that uses ElGamal homomorphic encryption to provide strong privacy guarantees (internal contribution by Eric Zbinden, request 3024764). 
	- Performance improvements (in terms of runtime and memory) in various algorithms through the use of blind projections in solution spaces (request 3085862). 
	- Important bug fix in the DisMDVRP plugin, which was ignoring the constraint on the maximum number of vehicles (bug 3081029). 
	- Performance improvements in the DisMDVRP plugin, by avoiding useless constraint checks (bug 3081420).  

Minor changes: 
	- Added support for real-valued variable domains (request 3083001). 
	- Minor improvements to P-DPOP. 
	- Other minor bug fixes. 


CHANGES IN VERSION 2.6.3 SINCE VERSION 2.6.2

Major changes:
	- Dramatic performance improvements on the DisMDVRP benchmarks after changing the DCOP model to not create variables for customers that can only be served by a single depot (request 3028053). 
	- Important reductions in SynchBB's message sizes (requests 3027783, 3027878).
	- Minor additional performance improvements in message sizes across all DCOP algorithms (request 3028389). 
	- Complete refactoring of the DFS heuristics; the DFSgeneration module now supports tie-breaking heuristics (request 3024768). 

Minor changes: 
	- Multiple bugfixes in the DisMDVRP plugin (bugs 3036428, 3042033, 3052930). 
	- Fixed various bugs in ADOPT (bug 3042376) and ASO-DPOP (bugs 3040093, 3040606). 
	- Fixed a bug following which the AgentFactory sometimes did not report that it timed out (bug 3033106), or even failed to time out (bug 3033079). 
	- Fixed the solvers reporting a runtime of 0 when simulated time was disabled (bug 3040748). 
	- Modified the format of the agent configuration files such that the class used for utility values is now specified as a parameter of the parser. 
	- Performance improvements in avoiding to parse unused constraints (request 3053509). 
	- Solutions output by the solvers now make the difference between the utility of the chosen assignment and the utility reported by the algorithm (bug 3032203). 
	- P-DPOP now uses a random DFSgeneration heuristic for privacy (request 3029989). 
	- Numerous code refactorings (including request 3031563). 
	- Other minor bug fixes. 


CHANGES IN VERSION 2.6.2 SINCE VERSION 2.6.1

Major changes:
	- Releasing a new DCOP benchmark: the Distributed, Multiple-Depot Vehicle Routing Problem (DisMDVRP, proposed as a separate plugin). 
	- The VariableElection module can now be parameterized by a tie-breaking heuristic.

Minor changes: 
	- O-DPOP and ASO-DPOP now have new versions that are able to exploit the fact that all variables have binary domains (when this applies). 
	- Improved the description of the XCSP file format in the XML Schema file and in the FRODO User Manual (suggestion by Achraf Tangui).
	- Performance improvements to Addable.equals() (request by Xavier Olive). 
	- Implemented Queue.resetMsgSizeMonitor() (request by Xavier Olive). 
	- Dramatically reduced the memory footprint of unit tests.
	- Minor bug fixes. 


CHANGES IN VERSION 2.6.1 SINCE VERSION 2.6

Major changes: 
	- Fixed an approximation error in the simulated time metric due to the coarse granularity of System.getCurrentTimeMillis(). Now using System.nanoTime() instead. 
	- Fixed a bug in DSA, which would get stuck in non-existent local minima due to not properly counting the number of conflicts. 
	
Minor changes: 
	- Performance improvements to various algorithms through the introduction of a "delayed addition" functionality. 
	- Fixed a bug with the -timeout option, which did not disable the timeout when the provided time was non-positive. 
	- Added an option to display the problem constraint graph in DOT format to the agent configuration files. 
	- Enriched the Solution class with some more statistics about the problem. 
	- Added a main() method to XCSPparser that just displays the input problem constraint graph in DOT format. 
	- Code refactoring and improvements to O-DPOP and ASO-DPOP; O-DPOP now has a variant in which variable domains are communicated up front. 
	- Fixed bugs in DPOPsolver. 
	- Fixed an incorrect "Out of memory" error report with the simulated time metric, which was not actually always due to running out of Java heap space. 
	- Fixed a rare deadlock in the simulated time metric that could lead to thread leaks. 


CHANGES IN VERSION 2.6 SINCE VERSION 2.5

Major changes: 
	- Releasing P-DPOP (Faltings IAT'08), a version of DPOP that protects privacy (internally contributed by Eric Zbinden). 
	- Dramatic performance improvements in the measurement of messages sizes. 
	- Now uses the Simulated Time metric by default.
	- Reduced the memory footprint of DPOP by not explicitly computing the join of the received UTIL messages. 
	
Minor changes: 
	- Code refactoring and improvement in the communications layer in preparation for MPI support (contributed by Xavier Olive). 
	- XCSPparser now checks that the attribute "nbTuples" has a correct value (improvement suggested by Jonas Helfer). 
	- XCSPparser no longer silently ignores constraints referencing non-existing relations (improvement suggested by Xavier Olive). 
	- Performance improvements to E[DPOP]. 
	- Fixed several bugs related to combining warm restarts with the Simulated Time metric.
	- Changed the way the parser class is specified in the agent configuration file.
	- The API now makes it possible to record the run times of an algorithm's modules individually. 
	- Implemented the Least Connected heuristic for VariableElection and DFSgeneration. 
	- Code refactoring in the solution spaces layer in preparation for P2-DPOP. 
	- Code refactoring and improvement in O-DPOP and ASO-DPOP. 
	- Minor bug fixes. 
	- Various other code improvements. 


CHANGES IN VERSION 2.5 SINCE VERSION 2.4.1

Major changes: 
	- Implemented the SynchBB algorithm by Hirayama & Yokoo (CP'97), adapted for DCOPs as suggested by Meisels. 
	- Preliminary implementation of S-DPOP, the version of DPOP with warm restarts by Petcu (AAAI'05). 
		- The warm restart functionality is currently only available through the API (see the S-DPOP JUnit tests for how to use it). 
		- S-DPOP does not yet try to choose a new DFS as similar to the previous one as possible to improve message reuse. 
	- Complete re-implementation of the simulated time metric for better performance and less variability. 
	- Performance improvements in ADOPT. 
	- Bugfixes and performance improvements in O-DPOP and ASO-DPOP. 
	- Dropped the support for NCCCs in O-DPOP and ASO-DPOP: for these two algorithms, the metric is ill-defined. 
	
Minor changes: 
	- Fixed a bug that would only manifest itself on problems involving unconstrained variables (reported by Xavier Olive). 
	- ADOPT now reports the total minimum cost, instead of on a per-component basis. 
	- Improved the rendering of DFS backedges in DOT format. 
	- Modified the format of the XML description for the VariableElection and DFSgeneration modules. 
	- Modules can now listen to outgoing messages, instead of only incoming ones. 
	- It is now possible to specify in the agent configuration file that each agent knows the identities of all other agents (needed by SynchBB).
	- Dropped two unused features of the Queue: the database and the default output pipe. 
	- Various bugfixes and improvements. 

Known issues: 
	- O-DPOP and ASO-DPOP currently only work on maximization problems with non-negative utilities (bug reported by Sankalp Khanna). 


CHANGES IN VERSION 2.4.1 SINCE VERSION 2.4

Major changes: 
	- Fixed a bug following which FRODO would always display wall clock time even when using the simulated time metric. 
	- Fixed a bug in measuring message sizes: the metric was biased in favor of DPOP. 
	- Fixed a bug in the simulated time metric when simultaneously measuring message sizes. 
	- Fixed a bug in the simulated time and NCCC metrics when sending multiple times the same message. 
	
Minor changes: 
	- Fixed a rare bug in ASO-DPOP. 
	- Reduced message sizes. 
	- Removed the attribute "useCentralMailer" from agent configuration files; it was redundant with "measureTime". 
	- Minor performance improvements in DFSgeneration. 
	- Important code refactoring in E[DPOP]. 


CHANGES IN VERSION 2.4 SINCE VERSION 2.3

Major changes: 
	- Releasing the local search algorithm DSA, by Zhang et al. (AAAI'02) (requested by Prof. Youssef Hamadi). 
	- Fixed a severe memory leak in DPOP.  
	- The simulated time metric no longer measures the time spent in measuring the sizes of messages. 
	
Minor changes: 
	- Fixed a ConcurrentModificationException that could be thrown when the recipient of a message attempts to modify its payload (bug report and fix by Xavier Olive). 
	- Improved the readability of the DFS DOT representation. 
	- DPOP now displays the total optimal utility instead of the optimal utility for each constraint graph component.
	- Local-E[DPOP] has been renamed E[DPOP], and Global-E[DPOP] and Centralized-E[DPOP] have been deleted. 
	- Fixed memory leaks in the unit tests. 
	- Improved code reuse. 


CHANGES IN VERSION 2.3 SINCE VERSION 2.2.3

Major changes: 
	- Releasing ASO-DPOP, by Ottens & Faltings (MASPLAN'08). 
	- Completely re-implemented the way FRODO counts messages and message sizes. This metric is now accessible through the "measureMsgs" attribute in the agent configuration file. 
	- Fixed the counting of NCCCs, according to Gershman et al. (DCR'08). 
	
Minor changes: 
	- Added a section on performance metrics to the User Manual. 
	- DPOP now has a new parameter specifying whether to optimize runtime or NCCC count. 
	- Solution spaces now have names (feature requested by Xavier Olive). 
	- Hypercubes now have a new field "infeasibleUtil" that is returned by getUtility() when the input assignments are infeasible due to a variable taking a value outside of its domain.
	- Various minor bug fixes and performance improvements. 


CHANGES IN VERSION 2.2.3 SINCE VERSION 2.2.2

Major changes: none
	
Minor changes: 
	- Fixed a bug in the Daemon's -controller option in advanced, distributed mode (reported by Abhishek Singh).
	- Minor changes to O-DPOP in preparation for the upcoming release of ASO-DPOP. 


CHANGES IN VERSION 2.2.2 SINCE VERSION 2.2.1

Major changes: none
	
Minor changes: 
	- The advanced, distributed mode now properly reports the runtime and message statistics (bug reported by Abhishek Singh).
	- DPOP can now swap data structures to disk to reduce RAM consumption. See the new "swap" option of the VALUEpropagation module. 


CHANGES IN VERSION 2.2.1 SINCE VERSION 2.2

Major changes: none
	
Minor changes: 
	- The simple mode now has a -timeout option to set the timeout (feature requested by Abhishek Singh). 
	- Fixed a bug in the advanced mode (reported by Abhishek Singh). 
	- Fixed DPOP reporting an "optimal utility" instead of an "optimal cost" when minimizing (bug reported by Abhishek Singh).
	- Fixed a minor typo in the user manual (reported by Abhishek Singh). 
	

CHANGES IN VERSION 2.2 SINCE VERSION 2.1.4

Major changes: 
	- Now provides implementations for various E[DPOP] algorithms by Leaute et al. (DCR'09). 
	- Now provides an implementation for O-DPOP by Petcu et al. (AAAI'06). 
	- Now provides implementations for the DP0, DP1 and DP2 preprocessing phases for ADOPT by Ali et al. (CP'04). 
	- Now supports the simulated time metric by Sultanik et al. (CP-DCR'07), via the use of a central mailer and ThreadMXBean. 
	- DPOP now supports the use of local solvers; the only such solver yet available is SimpleSubsolver. 
	- The information about whether we should maximize utility or minimize cost is now given in the XCSP file. 
	
Minor changes: 
	- Performance improvements to ADOPT. 
	- Performance improvements and bug fixes in the Solution Spaces layer. 
	- Performance improvements to the Communication layer. 
	- Fixed a rare non-termination bug. 
	- Added a timeout to the simple mode. 
	- Changes in the handling of NCCCs. NCCCs are currently only supported for O-DPOP and ADOPT. 
	- Trashed DPOP's DomainSharing module. 
	- Now provides an XML schema file for the XCSP format (ch/epfl/lia/frodo/algorithms/XCSPschema.xsd). 
	- The simple mode now properly displays the number of messages and total information sent. 
	- Changes in the required constructor signature for StatsReporters. 
	- Removed busy waits in the unit tests. 
	

CHANGES IN VERSION 2.1.4 SINCE VERSION 2.1.3

Major changes: 
	- Releasing Param-DPOP, a version of DPOP with parametric variables. 

Minor changes: 
	- Important speedups in DPOP, resulting from the introduction of solution iterators in the solution spaces layer.  
	- Removed the dependency on Jaxen, which results in performance improvements in XML parsing. 
	- Other various performance improvements. 


CHANGES IN VERSION 2.1.3 SINCE VERSION 2.1.2

Major changes: none. 

Minor changes: 
	- Fixed a bug in ADOPT, which could output a suboptimal solution for some problems involving infinite costs. 
	- Fixed a bug in ADOPT, which could run into an infinite loop for some problems involving infinite costs. 
	- Fixed a bug in the solution spaces layer, which could result in DPOP incorrectly reporting that a problem involving real-valued infinite utilities is infeasible. 


CHANGES IN VERSION 2.1.2 SINCE VERSION 2.1.1

Major changes: none. 

Minor changes: 
	- Fixed a bug in ADOPT that might not terminate on problems involving n-ary constraints (reported by Xavier Olive).


CHANGES IN VERSION 2.1.1 SINCE VERSION 2.1

Major changes: none. 

Minor changes: 
	- Fixed a bug in ADOPT resulting in "INF minus INF" exceptions when the problem included infinite costs (reported by Xavier Olive).


CHANGES IN VERSION 2.1 SINCE VERSION 2.0.2

Major changes: 
	- Now supports ADOPT. 
	- Added a way to specify the types of the messages each module listens for (see SingleQueueAgent.setMsgType() - requested by Xavier Olive). 
	- Each module now waits for a start message before parsing the problem (instead of parsing it in the constructor - requested by Xavier Olive). 
	- Each algorithm module now reports the number of (non-virtual) messages and the total amount of information (in bytes) it sent. 
	- Introduced the new ProblemInterface class that is used to describe a problem; all algorithm modules now take such a ProblemInterface as a first input. 
	
Minor changes: 
	- DPOP supports variable domains being initially private. 
	- Fixed a bug in which agents with no variable would not terminate (reported by Xavier Olive). 
	- DFSgeneration now returns a String representation of the DFS instead of printing it to System.out (requested by Xavier Olive). 
	- Fixed a synchronization bug in Queue.end() that would sometimes generate ConcurrentModificationExceptions (reported by Xavier Olive). 
	- Introduced the convenience class DPOPsolver. 
	- Added a new clone() method for hypercubes that allows the renaming of variables (requested by Xavier Olive). 
	- Various bug fixes and code improvements. 


CHANGES IN VERSION 2.0.2 SINCE VERSION 2.0.1

Major changes: none. 

Minor changes: 
	- DFSgeneration's Most Connected heuristic and statistics gatherer mode can now be used without the need of an XCSP representation of the problem.
	- The class to be used for utility values is now specified as a parameter to the UTILpropagation module. 
	- Small modifications to the XCSP parser in prevision of future new flavors of DPOP. 


CHANGES IN VERSION 2.0.1 SINCE VERSION 2.0

Major changes:
	- All parsing of XCSP files is now done in a new dedicated XCSPparser class. 
	- Implemented and tested previously missing algorithm module constructors that do not rely on XML inputs. 
	- Added support for real utility values, infinite utility values, and for multiplication of utilities. 

Minor changes:
	- Fixed bugs related to FRODO not finding configuration files when run as a JAR (reported by Xavier Olive). 
	- Fixed the spelling of "daemon" throughout the code (reported by Xavier Olive). 
	- Moved around a few test methods and classes. 
	- It is now easier to use the method Queue.sendMessageToMulti(). 
	- Fixed a bug in some tests, which would create a large number of threads and never properly kill them. 
	- Fixed typos and XCSP incompatibilities in the example problem 3colors.xml (reported by Xavier Olive). 
	- Minor code improvements and bug fixes. 
	